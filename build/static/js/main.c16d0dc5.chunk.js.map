{"version":3,"sources":["store/actions/actionTypes.js","hoc/Aux/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/orders.js","store/actions/auth.js","store/actions/index.js","axios-post.js","components/Burger/BurgerIngridients/BurgerIngridients.module.css","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Toolbar/Toolbar.module.css","Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","hoc/withDisplayError/withDisplayError.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Input/Input.js","components/Burger/BurgerIngridients/BurgerIngridients.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burgerLogo.png","Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js","hoc/asyncImport/asyncImport.js","components/Logo/Logo.js","Navigation/NavigationItems/NavigationItem/NavigationItem.js","Navigation/NavigationItems/NavigationItem/NavigationItemButton.js","Navigation/NavigationItems/NavigationItems.js","components/Toolbar/Toolbar.js","Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/orders.js","store/reducers/auth.js","index.js","components/Order/Order.js","containers/Orders/Orders.js"],"names":["ADD_INGRIDIENT","SUB_INGRIDIENT","REMOVE_CLICKED_INGRIDIENT","RESET_WHOLE_STATE","FETCH_INIT_INGRIDIENTS","FETCH_INIT_INGRIDIENTS_ERROR","POST_ORDER_DATA","POST_ORDER_DATA_ERROR","POST_ORDER_DATA_START","FETCH_ORDERS","FETCH_ORDERS_ERROR","LOADING_ORDERS","DELETE_ORDER","AUTH_START","AUTH_SUCCESS","AUTH_ERROR","AUTH_LOGOUT","aux","props","children","fetchInitIngridients","dispatch","axios","get","then","res","ingridients","data","type","actionTypes","payload","catch","err","addIngridient","comp","component","subIngridient","removeClickedIngridient","indx","index","resetWholeState","postOrderData","orderedData","token","post","responseDataID","orderData","name","id","console","log","orderDataError","loading","fetchOrders","userId","queryParams","orders","listOrder","key","push","error","ordersError","deleteOrder","delete","delOrd","auth_success","idToken","localId","authLogout","localStorage","removeItem","logout","expirationTime","setTimeout","window","location","reload","auth","email","password","isSignUp","authData","returnSecureToken","url","setItem","expiration","Date","now","expiresIn","auth_error","response","message","autoLogin","getItem","exp","getTime","leftTime","instance","create","baseURL","module","exports","button","disabled","className","styled","Button","btnType","join","onClick","clicked","spinner","Loader","withDisplayError","WrappedComponent","hideError","setState","state","reqInter","interceptors","request","use","req","resInter","eject","this","show","hidePurchase","Component","backDrop","Backdrop","hide","Modal","nextProps","nextState","style","transform","opacity","input","inputElement","attachedClasses","InputElement","invalid","touched","Invalid","elementtype","placeholder","config","placeHolder","onChange","changed","value","values","map","op","displayName","Input","Label","burgerIngridients","cmp","clickedIngridient","Meat","Cheese","Salad","Bacon","BreadTop","Seeds1","Seeds2","BreadBottom","burger","trans","com","BurgerIngridients","length","P","Burger","Auth","elementType","validation","required","isEmail","valid","minNums","isSingUp","checkValidity","isValid","trim","changeFormHandler","e","element","updatedFrom","target","submitHandler","preventDefault","onAuth","modeChangeHandler","prevState","arrState","el","inputs","output","onSubmit","redirect","to","connect","burgerBuilder","inOrder","actions","asyncImport","importedComponent","returnedComponent","default","Cmp","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","link","activeClassName","active","navigationItemButton","navigationItems","NavigationItems","loggedIn","Aux","NavigationItemButton","toolbar","Toolbar","icon","faHamburger","open","Icon","DesktopOnly","sideDrawer","SideDrawer","Close","splice","Open","close","Layout","showSideDrawer","hideSideDrawerHandler","showSideDrawerHandler","Content","withRouter","buildControl","BuildControl","label","Less","subClick","More","addClick","components","buildControls","Object","keys","i","addIng","subIng","disabledInfo","BuildControls","price","toFixed","OrderButton","disOrdBtn","purchasing","isAuth","orderSummary","list","textTransform","cancelPurchase","continuePurchase","BurgerBuilder","checkoutClicked","purchasableInfo","sum","purchasingHandler","history","pathname","reset","once","initIngridients","Spinner","addIngHandler","subIngHandler","totalPrice","OrderSummary","textAlign","asyncCheckout","asyncAuth","asyncOrders","App","routes","path","Boolean","hostname","match","initialState","INGRIDIENTS_PRICES","meat","cheese","salad","bacon","action","newValue","updatedIng","updatedInOrder","newTotal","newValueSUB","updatedIngSUB","updatedInOrderSUB","newTotalSUB","updatedInOrderREM","updatedIngREM","newTotalREM","reducer","inititalState","filter","ord","authStart","authError","authSuccess","rootReducer","combineReducers","order","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Order","ing","Orders","marginTop","fontWeight"],"mappings":"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","file":"static/js/main.c16d0dc5.chunk.js","sourcesContent":["export const ADD_INGRIDIENT = 'ADD_INGRIDIENT';\nexport const SUB_INGRIDIENT = 'SUB_INGRIDIENT';\nexport const REMOVE_CLICKED_INGRIDIENT = 'REMOVE_CLICKED_INGRIDIENT';\nexport const RESET_WHOLE_STATE = 'RESET_WHOLE_STATE';\nexport const FETCH_INIT_INGRIDIENTS = 'FETCH_INIT_INGRIDIENTS';\nexport const FETCH_INIT_INGRIDIENTS_ERROR = 'FETCH_INIT_INGRIDIENTS_ERROR';\n\nexport const POST_ORDER_DATA = 'POST_ORDER_DATA';\nexport const POST_ORDER_DATA_ERROR = \"POST_ORDER_DATA_ERROR\";\nexport const POST_ORDER_DATA_START = 'POST_ORDER_DATA_START';\n\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\nexport const FETCH_ORDERS_ERROR = 'FETCH_ORDERS_ERROR';\nexport const LOADING_ORDERS = 'LOADING_ORDERS';\nexport const DELETE_ORDER = 'DELETE_ORDER';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const AUTO_LOGIN = 'AUTO_LOGIN';\n","const aux = (props) => props.children;\n\nexport default aux;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-post';\n\n\nconst initIngridients = (ingridients) => {\n    return {\n        type: actionTypes.FETCH_INIT_INGRIDIENTS,\n        payload: {\n            ingridients: ingridients\n        }\n    }\n}\n\nconst initIngridientsERROR = (err) => {\n    return {\n        type: actionTypes.FETCH_INIT_INGRIDIENTS_ERROR\n    }\n}\n\nexport const fetchInitIngridients = () => {\n    return dispatch => {\n        axios.get('/ingridients.json')\n            .then(res => {\n                dispatch(initIngridients(res.data))\n            })\n            .catch(err => {\n                dispatch(initIngridientsERROR())\n            })\n    }\n}\n\nexport const addIngridient = (comp) => {\n    return {\n        type: actionTypes.ADD_INGRIDIENT,\n        payload: {\n            component: comp\n        }\n    }\n}\n\nexport const subIngridient = (comp) => {\n    return {\n        type: actionTypes.SUB_INGRIDIENT,\n        payload: {\n            component: comp\n        }\n    }\n}\n\nexport const removeClickedIngridient = (comp, indx) => {\n    return {\n        type: actionTypes.REMOVE_CLICKED_INGRIDIENT,\n        payload: {\n            component: comp,\n            index: indx\n        }\n    }\n}\n\nexport const resetWholeState = () => {\n    return {\n        type: actionTypes.RESET_WHOLE_STATE\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-post';\n\nconst orderData = (responseDataID, orderData) => {\n    return {\n        type: actionTypes.POST_ORDER_DATA,\n        payload: {\n            orderData: orderData,\n            id: responseDataID\n        }\n    }\n}\n\nconst orderDataError = (err) => {\n    return {\n        type: actionTypes.POST_ORDER_DATA_ERROR,\n        payload: {\n            err: err\n        }\n    }\n}\n\nconst postOrderDataStart = () => {\n    return {\n        type: actionTypes.POST_ORDER_DATA_START\n    }\n}\n\nexport const postOrderData = (orderedData, token) => {\n    return dispatch => {\n        dispatch(postOrderDataStart());\n        axios.post('/orders.json?auth=' + token, orderedData)\n            .then(res => {\n                dispatch(orderData(res.data.name, orderedData));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(orderDataError(err))\n            })\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-post';\n\nconst orders = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS,\n        payload: {\n            orders: orders\n        }\n    }\n}\n\nconst ordersError = (err) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_ERROR,\n        payload: {\n            error: err\n        }\n    }\n}\n\nconst loading = () => {\n    return {\n        type: actionTypes.LOADING_ORDERS\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(loading());\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n        axios.get(`/orders.json${queryParams}`)\n            .then(res => {\n                let listOrder = [];\n                for (let key in res.data) {\n                    listOrder.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(orders(listOrder));\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(ordersError(err));\n            })\n    }\n}\n\nconst delOrd = (id) => {\n    return {\n        type: actionTypes.DELETE_ORDER,\n        payload: {\n            id: id\n        }\n    }\n}\n\nexport const deleteOrder = (id, token) => {\n    return dispatch => {\n        dispatch(loading());\n        axios.delete('/orders/' + id +'.json?auth=' + token)\n            .then(() => {\n                dispatch(delOrd(id));\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nconst auth_start = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nconst auth_success = (data) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        payload: {\n            token: data.idToken,\n            userId: data.localId\n        }\n    }\n}\n\nconst auth_error = (err) => {\n    return {\n        type: actionTypes.AUTH_ERROR,\n        payload: {\n            error: err\n        }\n    }\n}\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expiration');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nconst logout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n            window.location.reload();\n        }, expirationTime *1000)\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(auth_start());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCTljnCS_Bh0NSTz6nz9IPH8SnDbes0yho';\n        if (!isSignUp) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCTljnCS_Bh0NSTz6nz9IPH8SnDbes0yho'\n        }\n        axios.post(url, authData)\n            .then(res => {\n                localStorage.setItem('token', res.data.idToken);\n                localStorage.setItem('userId', res.data.localId);\n                const expiration = new Date(Date.now() + res.data.expiresIn * 1000);\n                localStorage.setItem('expiration', expiration);\n                dispatch(auth_success(res.data));\n                dispatch(logout(res.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(auth_error(err.response.data.error.message));\n            })\n    }\n}\n\nexport const autoLogin = () => {\n    return dispatch => {\n        if (localStorage.getItem('token')) {\n            let exp = new Date(localStorage.getItem('expiration'));\n            exp = exp.getTime();\n            if (exp > Date.now()) {\n                dispatch(auth_success({\n                    idToken: localStorage.getItem('token'),\n                    localId: localStorage.getItem('userId')\n                }));\n                let leftTime = exp - Date.now();\n                dispatch(logout(leftTime / 1000));\n            } else {\n                dispatch(authLogout());\n            }\n        } else {\n            dispatch(authLogout());\n        }\n    }\n}","export {\n    fetchInitIngridients,\n    addIngridient,\n    subIngridient,\n    removeClickedIngridient,\n    resetWholeState\n} from './burgerBuilder';\n\nexport {\n    postOrderData\n} from './order';\n\nexport {\n    fetchOrders,\n    deleteOrder\n} from './orders';\n\nexport {\n    auth,\n    authLogout,\n    autoLogin\n} from './auth';","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-burger-builder-a1842.firebaseio.com/'\n});\n\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngridients_BreadBottom__3KkEw\",\"BreadTop\":\"BurgerIngridients_BreadTop__tfh9Q\",\"Seeds1\":\"BurgerIngridients_Seeds1__17fC9\",\"Seeds2\":\"BurgerIngridients_Seeds2__vuAdw\",\"Meat\":\"BurgerIngridients_Meat__3m72j\",\"Cheese\":\"BurgerIngridients_Cheese__1h7s9\",\"Salad\":\"BurgerIngridients_Salad__30poA\",\"Bacon\":\"BurgerIngridients_Bacon__1silj\"};","import React from 'react';\n\nimport styled from './Button.module.css';\n\n\nconst button = (props) => (\n    <button\n    disabled={props.disabled}\n    className={[styled.Button, styled[props.btnType]].join(' ')}\n    onClick={props.clicked}\n    >\n        {props.children}\n    </button>\n)\n\nexport default button;","import React from 'react';\n\nimport styled from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={styled.Loader}>Loading...</div>\n)\n\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__35_vi\",\"active\":\"NavigationItem_active__TggNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2QS0u\",\"Logo\":\"Toolbar_Logo__y9LhY\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3ANUV\",\"Icon\":\"Toolbar_Icon__3hdJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3ZcRC\",\"Open\":\"SideDrawer_Open__2Krcp\",\"Close\":\"SideDrawer_Close__37x83\",\"Logo\":\"SideDrawer_Logo__2T9l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n\nconst withDisplayError = (WrappedComponent, axios) => {\n\n\n    return class extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: null\n            };\n            this.reqInter = axios.interceptors.request.use(req => {\n                this.setState({\n                    error: null\n                })\n                return req;\n            }, err => {\n                this.setState({\n                    error: err\n                })\n            })\n\n            this.resInter = axios.interceptors.response.use(res => res, err => {\n                this.setState({\n                    error: err\n                });\n            });\n        }\n\n        // componentDidMount() {\n        //     axios.interceptors.request.use(req => {\n        //         this.setState({\n        //             error: null\n        //         })\n        //         return req;\n        //     }, err => {\n        //         this.setState({\n        //             error: err\n        //         })\n        //     })\n\n        //     axios.interceptors.response.use(res => res, err => {\n        //         this.setState({\n        //             error: err\n        //         });\n        //     });\n        // }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInter);\n            axios.interceptors.response.eject(this.resInter);\n\n        }\n\n        hideError = () => {\n            this.setState({\n                error: null\n            })\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        hidePurchase = {this.hideError}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withDisplayError;","import React from 'react';\n\nimport styled from './Backdrop.module.css';\n\nconst backDrop = (props) => (\n    props.show ? <div \n    className={styled.Backdrop}\n    onClick={props.hide} \n    ></div> : null\n)\n\nexport default backDrop;","import React, { Component } from 'react';\n\nimport styled from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.show !== nextProps.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop\n                    show={this.props.show}\n                    hide={this.props.hidePurchase}\n                />\n                <div className={styled.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n\n}\n\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React from 'react';\n\nimport styled from './Input.module.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    let attachedClasses = [styled.InputElement];\n    if(props.invalid && props.touched) {\n        attachedClasses.push(styled.Invalid);\n    }\n    switch (props.elementtype) {\n        case 'input': inputElement = \n            <input className={attachedClasses.join(' ')} \n        placeholder={props.config.placeHolder} \n            name={props.config.name} type={props.config.name} onChange={props.changed} value={props.value}/>\n            break;\n        case 'textarea': inputElement = \n            <textarea className={attachedClasses.join(' ')} \n        placeholder={props.config.placeHolder} \n            name={props.config.name} onChange={props.changed} value={props.value}/>\n            break;\n        case 'select': inputElement = \n            <select className={attachedClasses.join(' ')} \n            name={props.config.name} onChange={props.changed} value={props.value}>\n             {\n                 props.config.values.map(op => (\n                    <option key={op.value}\n                    value={op.value}>{op.displayName}</option>\n                 ))\n             }\n        </select>\n            break;\n        default: inputElement = \n            <input className={attachedClasses.join(' ')}  \n        placeholder={props.config.placeHolder} \n            name={props.config.name} onChange={props.changed} value={props.value}/>\n    }\n\n    return (\n        <div className={styled.Input}>\n            <label className={styled.Label}>{props.config.displayName}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input;","import React from 'react';\nimport styled from \"./BurgerIngridients.module.css\"\n\n\n\nconst burgerIngridients = (props) => {\n    let cmp;\n    switch (props.component) {\n        case 'meat':\n            cmp = <div onClick={props.clickedIngridient} className={styled.Meat}>\n\n            </div>\n            break;\n        case 'cheese':\n            cmp = <div onClick={props.clickedIngridient} className={styled.Cheese}>\n\n            </div>\n            break;\n        case 'salad':\n            cmp = <div onClick={props.clickedIngridient} className={styled.Salad}>\n\n            </div>\n            break;\n        case 'bacon':\n            cmp = <div onClick={props.clickedIngridient} className={styled.Bacon}>\n\n            </div>\n            break;\n        case 'breadTop':\n            cmp = <div className={styled.BreadTop}>\n                <div className={styled.Seeds1}></div>\n                <div className={styled.Seeds2}></div>\n            </div>\n            break;\n        case 'breadBottom': cmp = <div className={styled.BreadBottom}>\n\n        </div>\n            break;\n        default: cmp = null;\n    }\n\n\n    return (\n        cmp\n    );\n}\n\nexport default burgerIngridients;","import React from 'react';\n\nimport BurgerIngridients from './BurgerIngridients/BurgerIngridients';\nimport styled from './Burger.module.css';\n\n\nconst burger = (props) => {\n\n    // let trans = Object.keys(props.ingridients).map((igKey) => {\n    //     return [...Array(props.ingridients[igKey])].map((_,index) => {\n    //        return <BurgerIngridients \n    //        key={igKey + `${index}`}  \n    //        component = {igKey}\n    //        />\n    //     })\n    // }).reduce((arr, el) => {\n    //     return arr.concat(el);\n    // }, []);\n\n    let trans = props.ingridients.map((com, index)=> {\n        return <BurgerIngridients\n            key={com + `${index}`}\n            component={com}\n            clickedIngridient={() => props.removeClickedIngridient(com, index)}\n        />\n    })\n\n    if (trans.length === 0) {\n        trans = <p className={styled.P}>CHOOSE YOUR COMPONENTS</p>\n    }\n\n    return (\n        <div className={styled.Burger}>\n            <BurgerIngridients component='breadTop' />\n            {trans}\n            <BurgerIngridients component='breadBottom' />\n        </div>\n    )\n}\n\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burgerLogo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__IKaFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load4\":\"Spinner_load4__dJ24G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\",\"Input\":\"Auth_Input__2LQ-q\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux/Aux';\nimport styled from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n\n    state = {\n        auth: {\n            email: {\n                elementType: 'input',\n                config: {\n                    name: 'email',\n                    displayName: 'Email',\n                    placeHolder: 'Your email'\n                },\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                value: '',\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                config: {\n                    name: 'password',\n                    displayName: 'Password',\n                    placeHolder: 'Password'\n                },\n                validation: {\n                    required: true,\n                    minNums: 6\n                },\n                valid: false,\n                value: '',\n                touched: false\n            }\n        },\n        isSingUp: true\n    }\n\n    checkValidity = (value, validation) => {\n        let isValid = true;\n\n        if (!validation.required) {\n            return true;\n        }\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (validation.minNums) {\n            isValid = value.length >= validation.minNums;\n        }\n\n\n        return isValid;\n    }\n\n    changeFormHandler = (e, element) => {\n        const updatedFrom = {\n            ...this.state.auth,\n            [element]: {\n                ...this.state.auth[element],\n                value: e.target.value,\n                valid: this.checkValidity(e.target.value, this.state.auth[element].validation),\n                touched: true\n            }\n        }\n        this.setState({\n            auth: updatedFrom\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        this.props.onAuth(this.state.auth.email.value, this.state.auth.password.value, this.state.isSignUp);\n    }\n\n    modeChangeHandler = () => {\n        this.setState(prevState => {\n            return {\n                isSignUp: !prevState.isSignUp\n            }\n        })\n    }\n\n    render() {\n        let arrState = [];\n        for (let el in this.state.auth) {\n            arrState.push({\n                id: el,\n                config: this.state.auth[el]\n            });\n        }\n\n        const inputs = arrState.map(el => (\n            <Input\n                key={el.id}\n                elementtype={el.config.elementType}\n                config={el.config.config}\n                value={el.config.value}\n                invalid={!el.config.valid}\n                touched={el.config.touched}\n                changed={(e) => this.changeFormHandler(e, el.id)}\n            />\n        ))\n        let output = <Spinner />\n        if (!this.props.loading) {\n            output = <Aux>\n                <form onSubmit={this.submitHandler}>\n                    {inputs}\n                    <Button btnType='Success'>Submit</Button>\n                </form>\n                <Button btnType='Danger' clicked={this.modeChangeHandler}>Switch to {this.state.isSignUp ? 'SIGN IN' : 'SING UP'}</Button>\n            </Aux>\n        }\n        let redirect = <Redirect to='/'/>;\n        if (this.props.orders) {\n            redirect = <Redirect to='/checkout' />\n        }\n        return (\n            <div className={styled.Auth}>\n                {this.props.token ? redirect : null}\n                {this.props.error ? this.props.error : null}\n                {output}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        token: state.auth.token,\n        orders: state.burgerBuilder.inOrder.length !== 0 ? true : false\n    }\n}\n\nconst mapDispathToProps = (dispatch) => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Auth);","import React, { Component } from 'react';\n\nconst asyncImport = (importedComponent) => {\n    return class extends Component {\n        state = {\n            returnedComponent: null\n        }\n\n        componentDidMount() {\n            importedComponent()\n                .then(component => {\n                    this.setState({\n                        returnedComponent: component.default\n                    });\n                });\n        }\n\n        render() {\n            let Cmp = this.state.returnedComponent;\n\n            return Cmp ? <Cmp {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncImport;","import React from 'react';\n\nimport styled from './Logo.module.css';\nimport burgerLogo from '../../assets/images/burgerLogo.png';\n\n\nconst logo = () => {\n    return (\n        <div className={styled.Logo}>\n            <img src={burgerLogo} alt=\"My Burger Logo\"/>\n        </div>\n    )\n}\n\nexport default logo;\n","import React from 'react';\n\nimport styled from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={styled.NavigationItem}>\n        <NavLink \n        to = {props.link}\n        activeClassName={styled.active}>\n            {props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;","import React from 'react';\nimport styled from './NavigationItem.module.css';\n\nconst navigationItemButton = (props) => {\n    return (\n        <li className={styled.NavigationItem}>\n            <button onClick={props.clicked} >\n                {props.children}\n            </button>\n        </li>\n    )\n}\n\nexport default navigationItemButton;","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport NavigationItemButton from './NavigationItem/NavigationItemButton';\nimport Aux from '../../hoc/Aux/Aux';\nimport styled from './NavigationItems.module.css';\n\n\nconst navigationItems = (props) => {\n    return (\n        <ul className={styled.NavigationItems}>\n            <NavigationItem\n                link='/burger-builder'>\n                Burger Builder\n                </NavigationItem>\n\n            {\n                props.loggedIn ?\n                    <Aux>\n                        <NavigationItem\n                            link='/orders'\n                        >\n                            Orders\n                </NavigationItem>\n                        <NavigationItemButton\n                            clicked={props.clicked}>\n                            Logout\n                    </NavigationItemButton>\n                    </Aux>\n                    :\n                    <NavigationItem\n                        link='/auth'>\n                        Authenticate\n            </NavigationItem>\n            }\n        </ul>\n    )\n}\n\n\n\nexport default navigationItems;","import React from 'react';\n\nimport styled from './Toolbar.module.css';\nimport Logo from '../Logo/Logo';\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHamburger } from '@fortawesome/free-solid-svg-icons';\n\nconst toolbar = (props) => {\n    return (\n        <div className={styled.Toolbar}>\n                <FontAwesomeIcon icon={faHamburger} onClick={props.open} className={styled.Icon}/>\n            <div className={styled.Logo}>\n                <Logo />\n            </div>\n            <nav className={styled.DesktopOnly}>\n                <NavigationItems loggedIn={props.loggedIn} clicked={props.clicked}/>\n            </nav>\n        </div>\n    )\n}\n\nexport default toolbar;","import React from 'react';\n\nimport styled from './SideDrawer.module.css';\nimport Logo from '../../components/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\nimport Aux from '../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n\n    let attachedClasses = [styled.SideDrawer, styled.Close];\n\n    if(props.show) {\n         attachedClasses.splice(1, 1);\n         attachedClasses.push(styled.Open);\n        // attachedClasses = [styled.sideDrawer, styled.Close]\n    }\n\n    return (\n        <Aux>\n            <Backdrop\n            show = {props.show}\n            hide = {props.close}\n            />\n            <div className={attachedClasses.join(' ')} onClick={props.close}>\n                <div className={styled.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems loggedIn={props.loggedIn}/>\n                </nav>\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport Aux from '../Aux/Aux';\nimport styled from './Layout.module.css';\nimport Toolbar from '../../components/Toolbar/Toolbar';\nimport SideDrawer from '../../Navigation/SideDrawer/SideDrawer';\nimport * as actions from '../../store/actions/index';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false,\n        logout: false\n    }\n    componentDidUpdate() {\n        if(this.state.logout) {\n            this.setState({\n                logout: false\n            })\n        }\n    }\n\n    hideSideDrawerHandler = () => {\n        this.setState({ showSideDrawer: false });\n    }\n\n    showSideDrawerHandler = () => {\n        this.setState({ showSideDrawer: true });\n    }\n\n    logout = () => {\n        this.setState({\n            logout: true\n        });\n        this.props.authLogout();\n    }\n\n    render() {\n        return (\n            <Aux>\n                {this.state.logout ? \n                    <Redirect to='/' />\n                :\n                null}\n                <Toolbar\n                    open={this.showSideDrawerHandler}\n                    loggedIn={this.props.token ? true : false}\n                    clicked={this.logout} />\n                <SideDrawer\n                    show={this.state.showSideDrawer}\n                    close={this.hideSideDrawerHandler}\n                    loggedIn={this.props.token ? true : false} />\n                <main className={styled.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authLogout: () => dispatch(actions.authLogout())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Layout));\n","import React from 'react';\n\nimport styled from './BuildControl.module.css';\n\nconst buildControl = (props) => {\n    return (\n        <div className={styled.BuildControl}>\n            <label className={styled.Label}>{props.label}</label>\n            <button className={styled.Less} onClick={props.subClick} disabled={props.disabled}>Less</button>\n            <button className={styled.More} onClick={props.addClick}>More</button>\n        </div>\n    )\n}\n\nexport default buildControl;","import React from 'react';\n\nimport styled from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst components = {\n    Meat: 'meat',\n    Salad: 'salad',\n    Cheese: 'cheese',\n    Bacon: 'bacon'\n}\n\nconst buildControls = (props) => {\n\n    const trans = Object.keys(components).map((el, i) => {\n        return <BuildControl \n        label={el} \n        key={components[el] + i}\n        addClick = {() => props.addIng(components[el])}\n        subClick = {() => props.subIng(components[el])}\n        disabled = {props.disabledInfo[components[el]]}\n        />\n    })\n\n    return (\n        <div className={styled.BuildControls}>\n            <p>Current Price: <strong>{props.price.toFixed(2)}$</strong></p>\n            {trans}\n            <button className={styled.OrderButton} \n            disabled={props.disOrdBtn}\n            onClick = {props.purchasing}\n            >{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n        </div>\n    )\n}\n\n\nexport default buildControls;","import React from 'react';\nimport Aux from '../../hoc/Aux/Aux';\n\nimport Button from '../UI/Button/Button';\n\nconst orderSummary = (props) => {\n\n    const list = Object.keys(props.ingridients).map(el => {\n        return <li key={el}>\n            <span style={{ textTransform: 'capitalize' }}>{el}: </span>{props.ingridients[el]}\n        </li>\n    });\n\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingridients: </p>\n            <ul>\n                {list}\n            </ul>\n            <p><strong>Price: {props.price.toFixed(2)}$</strong></p>\n            <p>Continue to checkout?</p>\n            <Button\n                btnType=\"Danger\"\n                clicked={props.cancelPurchase}\n            >CANCEL</Button>\n\n            <Button\n                btnType=\"Success\"\n                clicked={props.continuePurchase}\n            >CHECKOUT</Button>\n        </Aux>\n    )\n}\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\nimport axios from '../../axios-post';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withDisplayError from '../../hoc/withDisplayError/withDisplayError';\nimport * as actions from '../../store/actions/index';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false,\n        checkoutClicked: false\n    }\n\n    componentDidMount() {\n        if(!this.props.token) {\n            this.props.reset();\n        }\n        if(!this.props.once) {\n            this.props.initIngridients();\n        }\n\n    }\n\n\n    purchasableInfo = () => {\n        let sum = 0;\n        for (let key in this.props.ingridients) {\n            sum += this.props.ingridients[key];\n        }\n\n        return sum <= 0;\n    }\n\n    purchasingHandler = () => {\n        if(this.props.token) {\n            this.setState({\n                purchasing: true\n            })\n        } else {\n            this.props.history.push('/auth');\n        }\n        \n    }\n\n    hidePurchase = () => {\n        this.setState({\n            purchasing: false\n        })\n    }\n\n    continuePurchase = () => {\n        this.props.history.push({\n            pathname: '/checkout',\n        });\n\n    }\n\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ingridients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0 ? true : false;\n        }\n\n        let burger = <Spinner />\n        let orderSummary = null;\n\n        if (this.props.ingridients) {\n            burger = (\n                <Aux>\n                    <Burger\n                        ingridients={this.props.inOrder}\n                        removeClickedIngridient={this.props.removeClickedIngridient}\n                    />\n                    <BuildControls\n                        addIng={this.props.addIngHandler}\n                        subIng={this.props.subIngHandler}\n                        disabledInfo={disabledInfo}\n                        price={this.props.totalPrice}\n                        purchasing={this.purchasingHandler}\n                        isAuth = {this.props.token ? true : false}\n                        disOrdBtn={this.purchasableInfo()}\n                    />\n                </Aux>\n            )\n            orderSummary = <OrderSummary\n                ingridients={this.props.ingridients}\n                cancelPurchase={this.hidePurchase}\n                continuePurchase={this.continuePurchase}\n                price={this.props.totalPrice}\n            />;\n        }\n\n\n        if (this.state.checkoutClicked) {\n            orderSummary = <Spinner />\n        }\n\n        return (\n            <Aux>\n                <Modal\n                    show={this.state.purchasing}\n                    hidePurchase={this.hidePurchase}\n                >\n                    {orderSummary}\n                </Modal>\n                {this.props.error ? <p style={{ textAlign: 'center' }}>Ingridients can't be loaded!</p> : burger}\n            </Aux>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        ingridients: state.burgerBuilder.ingridients,\n        inOrder: state.burgerBuilder.inOrder,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        once: state.burgerBuilder.once,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addIngHandler: (component) => dispatch(actions.addIngridient(component)),\n        subIngHandler: (component) => dispatch(actions.subIngridient(component)),\n        removeClickedIngridient: (component, index) => dispatch(actions.removeClickedIngridient(component, index)),\n        initIngridients: () => dispatch(actions.fetchInitIngridients()),\n        reset: () => dispatch(actions.resetWholeState())\n    }\n}\n\nexport default withDisplayError(connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder), axios);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncImport from './hoc/asyncImport/asyncImport';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncImport(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncAuth = asyncImport(() => {\n  return import('./containers/Auth/Auth');\n});\n\nconst asyncOrders = asyncImport(() => {\n  return import('./containers/Orders/Orders');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/burger-builder' component={BurgerBuilder} />\n        <Route path='/auth' component={asyncAuth} />\n        <Redirect to='/burger-builder' />\n      </Switch>\n    );\n\n    if(this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path='/burger-builder' component={BurgerBuilder} />\n          <Route path='/auth' component={asyncAuth} /> \n          <Route path='/checkout' component={asyncCheckout} />\n          <Route path='/orders' component={asyncOrders} />\n          <Redirect to='/burger-builder' />\n        </Switch>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token ? true : false\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoLogin: () => dispatch(actions.autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingridients: null,\n    inOrder: [],\n    totalPrice: 4,\n    error: false,\n    once: false\n}\n\nconst INGRIDIENTS_PRICES = {\n    meat: 1.3,\n    cheese: 0.4,\n    salad: 0.5,\n    bacon: 0.7\n}\n\nconst addIngridient = (state, action) => {\n    const newValue = state.ingridients[action.payload.component] + 1;\n    const updatedIng = {\n        ...state.ingridients,\n    };\n    let updatedInOrder = [...state.inOrder];\n    updatedInOrder.push(action.payload.component);\n    updatedIng[action.payload.component] = newValue;\n    // console.log(updatedInOrder);\n    const newTotal = state.totalPrice + INGRIDIENTS_PRICES[action.payload.component];\n    return {\n        ...state,\n        ingridients: updatedIng,\n        inOrder: updatedInOrder,\n        totalPrice: newTotal\n    }\n}\n\nconst subIngridient = (state, action) => {\n    // if (state.ingridients[action.payload.component] !== 0) {\n    const newValueSUB = state.ingridients[action.payload.component] - 1;\n    const updatedIngSUB = {\n        ...state.ingridients\n    };\n    let updatedInOrderSUB = [...state.inOrder];\n    for (let i = updatedInOrderSUB.length; i >= 0; i--) {\n        if (updatedInOrderSUB[i] === action.payload.component) {\n            updatedInOrderSUB.splice(i, 1);\n            break;\n        }\n    }\n    updatedIngSUB[action.payload.component] = newValueSUB;\n    const newTotalSUB = state.totalPrice - INGRIDIENTS_PRICES[action.payload.component];\n    // }\n    return {\n        ...state,\n        ingridients: updatedIngSUB,\n        inOrder: updatedInOrderSUB,\n        totalPrice: newTotalSUB\n    };\n}\n\nconst removeClickedIngridient = (state, action) => {\n    let updatedInOrderREM = [...state.inOrder];\n    updatedInOrderREM.splice(action.payload.index, 1);\n    let updatedIngREM = {\n        ...state.ingridients\n    };\n    updatedIngREM[action.payload.component] = state.ingridients[action.payload.component] - 1;\n    let newTotalREM = state.totalPrice - INGRIDIENTS_PRICES[action.payload.component];\n    // console.log(updatedInOrder);\n    // console.log(updatedIng);\n    return {\n        ...state,\n        ingridients: updatedIngREM,\n        inOrder: updatedInOrderREM,\n        totalPrice: newTotalREM\n    };\n}\n\nconst resetWholeState = (state, action) => {\n    return {\n        ...state,\n        ingridients: {\n            meat: 0,\n            cheese: 0,\n            salad: 0,\n            bacon: 0\n        },\n        inOrder: [],\n        totalPrice: 4\n    };\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_INIT_INGRIDIENTS:\n            return {\n                ...state,\n                ingridients: action.payload.ingridients,\n                error: false,\n                once: true\n            };\n        case actionTypes.FETCH_INIT_INGRIDIENTS_ERROR: \n            return {\n                ...state,\n                error: true\n            };\n        case actionTypes.ADD_INGRIDIENT: return addIngridient(state, action);\n\n        case actionTypes.SUB_INGRIDIENT: return subIngridient(state, action);\n            \n        case actionTypes.REMOVE_CLICKED_INGRIDIENT: return removeClickedIngridient(state, action);\n            \n        case actionTypes.RESET_WHOLE_STATE: return resetWholeState(state, action);\n            \n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    // orders: [],\n    loading: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.POST_ORDER_DATA: \n            // const order = {\n            //     orderData: action.payload.orderData,\n            //     id: action.payload.id\n            // };\n            return {\n                ...state,\n                // orders: state.orders.concat(order),\n                loading: false\n            };\n        case actionTypes.POST_ORDER_DATA_ERROR: \n            return {\n                ...state,\n                loading: false\n            };\n        case actionTypes.POST_ORDER_DATA_START:\n                return {\n                    ...state,\n                    loading: true\n                }\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst inititalState = {\n    orders: [],\n    loading: false,\n    error: null\n}\n\nconst reducer = (state = inititalState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_ORDERS:\n            return {\n                ...state,\n                orders: [...action.payload.orders],\n                error: null,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_ERROR:\n            return {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            };\n        case actionTypes.LOADING_ORDERS: \n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.DELETE_ORDER: \n            return {\n                ...state,\n                orders: state.orders.filter(ord => ord.id !== action.payload.id),\n                loading: false\n            }\n        default: return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    }\n}\n\nconst authError = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n    }\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state,\n        token: action.payload.token,\n        userId: action.payload.userId,\n        error: null,\n        loading: false\n    }\n}\n\nconst authLogout = (state, action) => {\n    return {\n        ...state,\n        token: null,\n        userId: null\n    }\n}\n\n\nconst reducer = ( state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_ERROR: return authError(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport burgerBuilder from './store/reducers/burgerBuilder';\nimport order from './store/reducers/order';\nimport orders from './store/reducers/orders';\nimport auth from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilder,\n    order: order,\n    orders: orders,\n    auth: auth\n})\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport styled from './Order.module.css';\nimport Button from '../UI/Button/Button';\n\nconst order = (props) => {\n    // console.log(props.ing.join('-'));\n    return (\n        <div className={styled.Order}>\n            <div>\n                <p style={{ textTransform: 'capitalize' }}>Ingridients: {props.ing ? props.ing.join('-') : 'Only Bread'}</p>\n                <p>Price: <strong>{props.price.toFixed(2)}</strong></p>\n            </div>\n                <Button btnType='Danger' clicked={props.deleteOrder}> DELETE </Button>\n        </div>\n    )\n}\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-post';\nimport withDisplayError from '../../hoc/withDisplayError/withDisplayError';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.fetchOrders(this.props.token, this.props.userId);\n    }\n\n\n    render() {\n        let orders = <p style={{textAlign: 'center', marginTop: '100px', fontWeight: '700'}}>No orders</p>;\n        if(this.props.loading) {\n            orders = <Spinner />\n        }\n        if (this.props.orders.length !== 0) {\n            orders = this.props.orders.map(order => {\n                return <Order\n                    ing = {order.ingridients}\n                    price={order.price}\n                    key={order.id}\n                    deleteOrder={() => this.props.deleteOrder(order.id, this.props.token)}\n                />\n            })\n        }\n        // console.log(this.state.orders[0]);\n\n        return (\n            <div>\n                {orders}\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.orders.orders,\n        loading: state.orders.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n        deleteOrder: (id, token) => dispatch(actions.deleteOrder(id, token))\n    }\n}\n\nexport default withDisplayError(connect(mapStateToProps, mapDispatchToProps)(Orders), axios);"],"sourceRoot":""}